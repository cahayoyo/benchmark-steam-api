// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/age-rating-categories": {
            "get": {
                "description": "Get a list of AgeRatingCategory.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AgeRatingCategory"
                ],
                "summary": "Get all AgeRatingCategory.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.AgeRatingCategory"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new AgeRatingCategory.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AgeRatingCategory"
                ],
                "summary": "Create New AgeRatingCategory.",
                "parameters": [
                    {
                        "description": "the body to create a new AgeRatingCategory",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.ageRatingCategoryInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AgeRatingCategory"
                        }
                    }
                }
            }
        },
        "/age-rating-categories/{id}": {
            "get": {
                "description": "Get an AgeRatingCategory by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AgeRatingCategory"
                ],
                "summary": "Get AgeRatingCategory.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AgeRatingCategory id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AgeRatingCategory"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a AgeRatingCategory by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AgeRatingCategory"
                ],
                "summary": "Delete one AgeRatingCategory.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AgeRatingCategory id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update AgeRatingCategory by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AgeRatingCategory"
                ],
                "summary": "Update AgeRatingCategory.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AgeRatingCategory id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update age rating category",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.ageRatingCategoryInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.AgeRatingCategory"
                        }
                    }
                }
            }
        },
        "/age-rating-categories/{id}/game": {
            "get": {
                "description": "Get all Game by AgeRatingCategoryId.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AgeRatingCategory"
                ],
                "summary": "Get Game.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "AgeRatingCategory id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Game"
                            }
                        }
                    }
                }
            }
        },
        "/changepassword/{username}": {
            "patch": {
                "description": "Change Password by username.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Change Password.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Username",
                        "name": "username",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to change password",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.ChangePasswordInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/developer": {
            "get": {
                "description": "Get a list of Developer.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Developer"
                ],
                "summary": "Get all Developer.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Developer"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new Developer.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Developer"
                ],
                "summary": "Create New Developer.",
                "parameters": [
                    {
                        "description": "the body to create a new Developer",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.developerInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Developer"
                        }
                    }
                }
            }
        },
        "/developer/{id}": {
            "get": {
                "description": "Get an Developer by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Developer"
                ],
                "summary": "Get Developer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Developer id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Developer"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a Developer by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Developer"
                ],
                "summary": "Delete one Developer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Developer id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update Developer by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Developer"
                ],
                "summary": "Update Developer.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Developer id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update developer",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.developerInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Developer"
                        }
                    }
                }
            }
        },
        "/developer/{id}/game": {
            "get": {
                "description": "Get all Game by DeveloperId.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Developer"
                ],
                "summary": "Get Game.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Developer id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Game"
                            }
                        }
                    }
                }
            }
        },
        "/game": {
            "get": {
                "description": "Get a list of Game.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get all game.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Game"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new Game.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Create New Game.",
                "parameters": [
                    {
                        "description": "the body to create a new game",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.gameInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Game"
                        }
                    }
                }
            }
        },
        "/game/{id}": {
            "get": {
                "description": "Get a Game by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Get Game.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "game id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Game"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a Game by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Delete one Game.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "game id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update Game by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "Update Game.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "game id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update an game",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.gameInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Game"
                        }
                    }
                }
            }
        },
        "/genre": {
            "get": {
                "description": "Get a list of Genre.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genre"
                ],
                "summary": "Get all Genre.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Genre"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new Genre.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genre"
                ],
                "summary": "Create New Genre.",
                "parameters": [
                    {
                        "description": "the body to create a new Genre",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.genreInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Genre"
                        }
                    }
                }
            }
        },
        "/genre/{id}": {
            "get": {
                "description": "Get an Genre by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genre"
                ],
                "summary": "Get Genre.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Genre"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a Genre by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genre"
                ],
                "summary": "Delete one Genre.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update Genre by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genre"
                ],
                "summary": "Update Genre.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update genre",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.genreInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Genre"
                        }
                    }
                }
            }
        },
        "/genre/{id}/game": {
            "get": {
                "description": "Get all Game by GenreId.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Genre"
                ],
                "summary": "Get Game.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Genre id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Game"
                            }
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Logging in to get jwt token to access admin or user api by roles.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Login as as user.",
                "parameters": [
                    {
                        "description": "the body to login a user",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.LoginInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/maximumspecification": {
            "get": {
                "description": "Get a list of MaximumSpecification.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaximumSpecification"
                ],
                "summary": "Get all MaximumSpecification.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MaximumSpecification"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new MaximumSpecification.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaximumSpecification"
                ],
                "summary": "Create New MaximumSpecification.",
                "parameters": [
                    {
                        "description": "the body to create a new MaximumSpecification",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.maximumSpecificationInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MaximumSpecification"
                        }
                    }
                }
            }
        },
        "/maximumspecification/{id}": {
            "get": {
                "description": "Get an MaximumSpecification by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaximumSpecification"
                ],
                "summary": "Get MaximumSpecification.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MaximumSpecification id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MaximumSpecification"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a MaximumSpecification by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaximumSpecification"
                ],
                "summary": "Delete one MaximumSpecification.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MaximumSpecification id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update MaximumSpecification by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MaximumSpecification"
                ],
                "summary": "Update MaximumSpecification.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MaximumSpecification id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update MaximumSpecification",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.maximumSpecificationInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MaximumSpecification"
                        }
                    }
                }
            }
        },
        "/minimumspecification": {
            "get": {
                "description": "Get a list of MinimumSpecification.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinimumSpecification"
                ],
                "summary": "Get all MinimumSpecification.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.MinimumSpecification"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new MinimumSpecification.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinimumSpecification"
                ],
                "summary": "Create New MinimumSpecification.",
                "parameters": [
                    {
                        "description": "the body to create a new MinimumSpecification",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.minimumSpecificationInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MinimumSpecification"
                        }
                    }
                }
            }
        },
        "/minimumspecification/{id}": {
            "get": {
                "description": "Get an MinimumSpecification by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinimumSpecification"
                ],
                "summary": "Get MinimumSpecification.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MinimumSpecification id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MinimumSpecification"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a MinimumSpecification by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinimumSpecification"
                ],
                "summary": "Delete one MinimumSpecification.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MinimumSpecification id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update MinimumSpecification by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "MinimumSpecification"
                ],
                "summary": "Update MinimumSpecification.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "MinimumSpecification id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update MinimumSpecification",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.minimumSpecificationInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.MinimumSpecification"
                        }
                    }
                }
            }
        },
        "/publisher": {
            "get": {
                "description": "Get a list of Publisher.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher"
                ],
                "summary": "Get all Publisher.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Publisher"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new Publisher.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher"
                ],
                "summary": "Create New Publisher.",
                "parameters": [
                    {
                        "description": "the body to create a new Publisher",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.publisherInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Publisher"
                        }
                    }
                }
            }
        },
        "/publisher/{id}": {
            "get": {
                "description": "Get an Publisher by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher"
                ],
                "summary": "Get Publisher.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Publisher id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Publisher"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a Publisher by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher"
                ],
                "summary": "Delete one Publisher.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Publisher id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update Publisher by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher"
                ],
                "summary": "Update Publisher.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Publisher id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update Publisher",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.publisherInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Publisher"
                        }
                    }
                }
            }
        },
        "/publisher/{id}/game": {
            "get": {
                "description": "Get all Game by PublisherId.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Publisher"
                ],
                "summary": "Get Game.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Publisher id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Game"
                            }
                        }
                    }
                }
            }
        },
        "/ratinggame": {
            "get": {
                "description": "Get a list of RatingGame.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RatingGame"
                ],
                "summary": "Get all RatingGame.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Rating"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new RatingGame.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RatingGame"
                ],
                "summary": "Create New RatingGame.",
                "parameters": [
                    {
                        "description": "the body to create a new game",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.ratingInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Game"
                        }
                    }
                }
            }
        },
        "/ratinggame/{id}": {
            "get": {
                "description": "Get a RatingGame by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RatingGame"
                ],
                "summary": "Get RatingGame.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ratinggame id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Rating"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a RatingGame by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RatingGame"
                ],
                "summary": "Delete one RatingGame.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ratinggame id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update RatingGame by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "RatingGame"
                ],
                "summary": "Update RatingGame.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ratinggame id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update an RatingGame",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.ratingInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Rating"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "registering a user from public access.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a user.",
                "parameters": [
                    {
                        "description": "the body to register a user",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.RegisterInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/reviewgame": {
            "get": {
                "description": "Get a list of ReviewGame.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReviewGame"
                ],
                "summary": "Get all ReviewGame.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Review"
                            }
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Creating a new ReviewGame.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReviewGame"
                ],
                "summary": "Create New ReviewGame.",
                "parameters": [
                    {
                        "description": "the body to create a new reviewgame",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reviewInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Review"
                        }
                    }
                }
            }
        },
        "/reviewgame/{id}": {
            "get": {
                "description": "Get a ReviewGame by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReviewGame"
                ],
                "summary": "Get ReviewGame.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "reviewgame id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Review"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Delete a ReviewGame by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReviewGame"
                ],
                "summary": "Delete one ReviewGame.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "reviewgame id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerToken": []
                    }
                ],
                "description": "Update ReviewGame by id.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ReviewGame"
                ],
                "summary": "Update ReviewGame.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "reviewgame id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "the body to update an ReviewGame",
                        "name": "Body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controller.reviewInput"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization. How to input in swagger : 'Bearer \u003cinsert_your_token_here\u003e'",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Review"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controller.ChangePasswordInput": {
            "type": "object",
            "required": [
                "password"
            ],
            "properties": {
                "password": {
                    "type": "string"
                }
            }
        },
        "controller.LoginInput": {
            "type": "object",
            "required": [
                "password",
                "username"
            ],
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controller.RegisterInput": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "controller.ageRatingCategoryInput": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.developerInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.gameInput": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "age_rating_category_id": {
                    "type": "integer"
                },
                "developer_id": {
                    "type": "integer"
                },
                "genre_id": {
                    "type": "integer"
                },
                "publisher_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "controller.genreInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.maximumSpecificationInput": {
            "type": "object",
            "properties": {
                "directx": {
                    "type": "string"
                },
                "game_id": {
                    "type": "integer"
                },
                "graphics": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "processor": {
                    "type": "string"
                },
                "soundcard": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                }
            }
        },
        "controller.minimumSpecificationInput": {
            "type": "object",
            "properties": {
                "directx": {
                    "type": "string"
                },
                "game_id": {
                    "type": "integer"
                },
                "graphics": {
                    "type": "string"
                },
                "memory": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "processor": {
                    "type": "string"
                },
                "soundcard": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                }
            }
        },
        "controller.publisherInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "controller.ratingInput": {
            "type": "object",
            "properties": {
                "game_id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer"
                }
            }
        },
        "controller.reviewInput": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "game_id": {
                    "type": "integer"
                }
            }
        },
        "models.AgeRatingCategory": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Developer": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Game": {
            "type": "object",
            "properties": {
                "about": {
                    "type": "string"
                },
                "age_rating_category_id": {
                    "type": "integer"
                },
                "created_at": {
                    "type": "string"
                },
                "developer_id": {
                    "type": "integer"
                },
                "genre_id": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "publisher_id": {
                    "type": "integer"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "models.Genre": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.MaximumSpecification": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "directx": {
                    "type": "string"
                },
                "gameID": {
                    "type": "integer"
                },
                "graphics": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "memory": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "processor": {
                    "type": "string"
                },
                "soundcard": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.MinimumSpecification": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "directx": {
                    "type": "string"
                },
                "gameID": {
                    "type": "integer"
                },
                "graphics": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "memory": {
                    "type": "string"
                },
                "network": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "processor": {
                    "type": "string"
                },
                "soundcard": {
                    "type": "string"
                },
                "storage": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Publisher": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Rating": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "gameID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "rating": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Review": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "gameID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
